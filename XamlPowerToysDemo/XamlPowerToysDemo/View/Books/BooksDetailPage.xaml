<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:books="clr-namespace:XamlPowerToysDemo.View.Books;assembly=XamlPowerToysDemo"
             x:Class="XamlPowerToysDemo.View.Books.BooksDetailPage"
             Title="Detail">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Save" Command="{Binding Path=SaveCommand}"/>
    </ContentPage.ToolbarItems>
    
    <ContentPage.Content>
        <books:BooksDetailGridRootGridRowForm/>
    </ContentPage.Content>
</ContentPage>

<!--
    PLEASE NOTE: as of 6/18/2016, the UWP rendering of these simple forms does look great.
                    UWP's layout does not respect Grid Column widths the way IOS and Android do.
                    I'm hoping that as Xamarin Forms matures, a more consistent rendering across
                    all platforms will be much closer.

    BooksDetailWorkPlace - an empty form play ground for creating forms.

    BooksDetailStackLayoutRootGridRowForm - great results - uses Grid to lay out editing row.

    BooksDetailStackLayoutForm - great results - Top to bottom stacked form.
    
    BooksDetailGridRootGridRowForm - great results - uses Grid to lay out rows and columns.
       
    BooksDetailTableViewForm - good on IOS, good on Android; 
                               IOS can't set EntryCell label font size,        
                               Android does not allow setting widths on Entry Cells, 
                               better to not use Entry Cells for now unless you don't
                               care about these minor inconsistencies.

    BooksDetailTableViewGridRowForm - great results - uses TableView and Grid to lay out rows.
    
    BooksDetailStackLayoutRootStackLayoutRowForm - awful results do not use this layout technique.
-->